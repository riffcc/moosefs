version: '3.8'

services:
  # Demo with working components - chunkservers, clients, CLI, monitoring
  # Note: Master server temporarily excluded due to compilation issues (Task 34 needs completion)
  
  # Chunk servers (3x with multiple data dirs each)
  chunkserver-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.chunkserver
      args:
        RUST_VERSION: "1.79"
    container_name: mooseng-demo-chunkserver-1
    hostname: chunkserver-1
    environment:
      - RUST_LOG=info
      - MOOSENG_MASTER_ENDPOINTS=localhost:9422  # Will be updated when master is ready
      - MOOSENG_BIND_ADDRESS=0.0.0.0
      - MOOSENG_PORT=9420
      - MOOSENG_METRICS_PORT=9425
      - MOOSENG_DATA_DIRS=/data1,/data2,/data3,/data4
      - MOOSENG_CHUNK_SIZE_MB=64
      - MOOSENG_ENABLE_HEALTH_CHECKS=true
      - MOOSENG_ENABLE_SELF_HEALING=true
      - MOOSENG_ENABLE_ERASURE_CODING=true
      - MOOSENG_ENABLE_ZERO_COPY=true
    ports:
      - "9420:9420"
      - "9425:9425"
    volumes:
      - chunkserver-1-data1:/data1
      - chunkserver-1-data2:/data2
      - chunkserver-1-data3:/data3
      - chunkserver-1-data4:/data4
      - chunkserver-1-logs:/var/log/mooseng
      - ./docker/configs:/etc/mooseng/configs:ro
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'
    healthcheck:
      test: ["CMD", "/usr/local/bin/mooseng-chunkserver", "--health-check"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  chunkserver-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.chunkserver
      args:
        RUST_VERSION: "1.79"
    container_name: mooseng-demo-chunkserver-2
    hostname: chunkserver-2
    environment:
      - RUST_LOG=info
      - MOOSENG_MASTER_ENDPOINTS=localhost:9422
      - MOOSENG_BIND_ADDRESS=0.0.0.0
      - MOOSENG_PORT=9420
      - MOOSENG_METRICS_PORT=9425
      - MOOSENG_DATA_DIRS=/data1,/data2,/data3,/data4
      - MOOSENG_CHUNK_SIZE_MB=64
      - MOOSENG_ENABLE_HEALTH_CHECKS=true
      - MOOSENG_ENABLE_SELF_HEALING=true
      - MOOSENG_ENABLE_ERASURE_CODING=true
      - MOOSENG_ENABLE_ZERO_COPY=true
    ports:
      - "9450:9420"
      - "9455:9425"
    volumes:
      - chunkserver-2-data1:/data1
      - chunkserver-2-data2:/data2
      - chunkserver-2-data3:/data3
      - chunkserver-2-data4:/data4
      - chunkserver-2-logs:/var/log/mooseng
      - ./docker/configs:/etc/mooseng/configs:ro
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'
    healthcheck:
      test: ["CMD", "/usr/local/bin/mooseng-chunkserver", "--health-check"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  chunkserver-3:
    build:
      context: .
      dockerfile: docker/Dockerfile.chunkserver
      args:
        RUST_VERSION: "1.79"
    container_name: mooseng-demo-chunkserver-3
    hostname: chunkserver-3
    environment:
      - RUST_LOG=info
      - MOOSENG_MASTER_ENDPOINTS=localhost:9422
      - MOOSENG_BIND_ADDRESS=0.0.0.0
      - MOOSENG_PORT=9420
      - MOOSENG_METRICS_PORT=9425
      - MOOSENG_DATA_DIRS=/data1,/data2,/data3,/data4
      - MOOSENG_CHUNK_SIZE_MB=64
      - MOOSENG_ENABLE_HEALTH_CHECKS=true
      - MOOSENG_ENABLE_SELF_HEALING=true
      - MOOSENG_ENABLE_ERASURE_CODING=true
      - MOOSENG_ENABLE_ZERO_COPY=true
    ports:
      - "9460:9420"
      - "9465:9425"
    volumes:
      - chunkserver-3-data1:/data1
      - chunkserver-3-data2:/data2
      - chunkserver-3-data3:/data3
      - chunkserver-3-data4:/data4
      - chunkserver-3-logs:/var/log/mooseng
      - ./docker/configs:/etc/mooseng/configs:ro
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'
    healthcheck:
      test: ["CMD", "/usr/local/bin/mooseng-chunkserver", "--health-check"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Metalogger for backup (works without master initially)
  metalogger-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.metalogger
      args:
        RUST_VERSION: "1.79"
    container_name: mooseng-demo-metalogger-1
    hostname: metalogger-1
    environment:
      - RUST_LOG=info
      - MOOSENG_MASTER_ENDPOINTS=localhost:9422
      - MOOSENG_BIND_ADDRESS=0.0.0.0
      - MOOSENG_PORT=9419
      - MOOSENG_METRICS_PORT=9426
      - MOOSENG_DOWNLOAD_FREQ_SECONDS=3600
      - MOOSENG_MAX_BACKUP_FILES=7
      - MOOSENG_ENABLE_COMPRESSION=true
      - MOOSENG_ENABLE_HEALTH_CHECKS=true
    ports:
      - "9419:9419"
      - "9426:9426"
    volumes:
      - metalogger-1-data:/var/lib/mooseng/metalogger
      - metalogger-1-logs:/var/log/mooseng
      - ./docker/configs:/etc/mooseng/configs:ro
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "/usr/local/bin/mooseng-metalogger", "--health-check"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s

  # CLI container for management
  cli:
    build:
      context: .
      dockerfile: docker/Dockerfile.cli
      args:
        RUST_VERSION: "1.79"
    container_name: mooseng-demo-cli
    hostname: cli
    environment:
      - RUST_LOG=info
      - MOOSENG_MASTER_ENDPOINTS=localhost:9421  # Will connect when master is available
      - MOOSENG_OUTPUT_FORMAT=table
      - MOOSENG_COLOR_OUTPUT=true
    volumes:
      - cli-home:/home/mooseng
      - ./docker/configs:/etc/mooseng/configs:ro
    networks:
      - mooseng-demo-net
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    stdin_open: true
    tty: true
    command: ["/bin/sh"]

  # MooseNG Unified Dashboard
  dashboard:
    image: nginx:alpine
    container_name: mooseng-demo-dashboard
    hostname: dashboard
    ports:
      - "8080:80"
    volumes:
      - ./unified_dashboard/public:/usr/share/nginx/html:ro
      - ./unified_dashboard/assets:/usr/share/nginx/html/assets:ro
      - ./unified_dashboard/components:/usr/share/nginx/html/components:ro
      - ./unified_dashboard/src:/usr/share/nginx/html/src:ro
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: mooseng-demo-prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: mooseng-demo-grafana
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_COOKIE_SECURE=false  # Demo only
      - GF_SECURITY_COOKIE_SAMESITE=lax
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_LOG_LEVEL=warn
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - mooseng-demo-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  mooseng-demo-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
    driver_opts:
      com.docker.network.bridge.name: br-mooseng-demo

volumes:
  # Chunk server data
  chunkserver-1-data1:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-1
      com.mooseng.disk: data1
  chunkserver-1-data2:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-1
      com.mooseng.disk: data2
  chunkserver-1-data3:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-1
      com.mooseng.disk: data3
  chunkserver-1-data4:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-1
      com.mooseng.disk: data4
  chunkserver-1-logs:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-1

  chunkserver-2-data1:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-2
      com.mooseng.disk: data1
  chunkserver-2-data2:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-2
      com.mooseng.disk: data2
  chunkserver-2-data3:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-2
      com.mooseng.disk: data3
  chunkserver-2-data4:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-2
      com.mooseng.disk: data4
  chunkserver-2-logs:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-2

  chunkserver-3-data1:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-3
      com.mooseng.disk: data1
  chunkserver-3-data2:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-3
      com.mooseng.disk: data2
  chunkserver-3-data3:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-3
      com.mooseng.disk: data3
  chunkserver-3-data4:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-3
      com.mooseng.disk: data4
  chunkserver-3-logs:
    driver: local
    labels:
      com.mooseng.component: chunkserver
      com.mooseng.node: chunkserver-3

  # Metalogger data
  metalogger-1-data:
    driver: local
    labels:
      com.mooseng.component: metalogger
      com.mooseng.node: metalogger-1
  metalogger-1-logs:
    driver: local
    labels:
      com.mooseng.component: metalogger
      com.mooseng.node: metalogger-1

  # CLI and monitoring
  cli-home:
    driver: local
    labels:
      com.mooseng.component: cli
  prometheus-data:
    driver: local
    labels:
      com.mooseng.component: monitoring
      com.mooseng.service: prometheus
  grafana-data:
    driver: local
    labels:
      com.mooseng.component: monitoring
      com.mooseng.service: grafana