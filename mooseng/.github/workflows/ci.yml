name: MooseNG CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler libssl-dev pkg-config cmake
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --workspace --all-targets --all-features -- -D warnings
    
    - name: Build all components
      run: cargo build --workspace --all-features
    
    - name: Run library tests
      run: cargo test --workspace --lib
    
    - name: Build release binaries
      run: cargo build --workspace --release

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        cd docker
        chmod +x build.sh
        ./build.sh
    
    - name: Test Docker Compose
      run: |
        docker-compose -f docker-compose.test.yml up --build -d
        sleep 30
        docker-compose -f docker-compose.test.yml down

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Security audit
      uses: actions-rs/audit@v1