# Optimized MooseFS Master Server Dockerfile
# Multi-stage build for smaller final image
FROM ubuntu:22.04 AS builder

# Install build dependencies in one layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    libc6-dev \
    libfuse3-dev \
    python3 \
    python3-pip \
    zlib1g-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set build argument for build number
ARG BUILDNO=unknown

# Copy only necessary source files for build
COPY Makefile.* configure* config.h.in aclocal.m4 ./
COPY build-aux ./build-aux/
COPY m4 ./m4/
COPY mfscommon ./mfscommon/
COPY mfsmaster ./mfsmaster/
COPY mfsdata ./mfsdata/

# Build MooseFS master with optimizations
RUN ./configure \
    --prefix=/usr/local \
    --sysconfdir=/etc/mfs \
    --localstatedir=/var/lib/mfs \
    --with-default-user=mfs \
    --with-default-group=mfs \
    --disable-mfsmount \
    --enable-shared=no \
    --enable-static=yes \
    CFLAGS="-O3 -march=native -mtune=native -flto" \
    CXXFLAGS="-O3 -march=native -mtune=native -flto" \
    LDFLAGS="-Wl,--strip-all"

RUN make -j$(nproc) && make install-strip

# Runtime stage with minimal Ubuntu base
FROM ubuntu:22.04

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    zlib1g \
    ca-certificates \
    tini \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Create mfs user and group with specific UID/GID for consistency
RUN groupadd -r -g 1001 mfs && useradd -r -g mfs -u 1001 -d /var/lib/mfs -s /bin/bash mfs

# Copy built binaries and libraries from builder stage
COPY --from=builder /usr/local/bin/mfsmaster /usr/local/bin/
COPY --from=builder /usr/local/sbin/mfsmaster /usr/local/sbin/
COPY --from=builder /usr/local/share/mfs /usr/local/share/mfs

# Create necessary directories with correct permissions
RUN mkdir -p /var/lib/mfs /var/log/mfs /etc/mfs \
    && chown -R mfs:mfs /var/lib/mfs /var/log/mfs /etc/mfs

# Copy configuration files
COPY mfsdata/mfsmaster.cfg.in /etc/mfs/mfsmaster.cfg
COPY mfsdata/mfsexports.cfg /etc/mfs/mfsexports.cfg
COPY mfsdata/mfstopology.cfg /etc/mfs/mfstopology.cfg
COPY mfsdata/metadata.mfs /var/lib/mfs/metadata.mfs

# Set ownership of config files
RUN chown -R mfs:mfs /etc/mfs /var/lib/mfs

# Expose ports
EXPOSE 9419 9420 9421

# Set working directory
WORKDIR /var/lib/mfs

# Add health check script
RUN echo '#!/bin/bash\n/usr/local/bin/mfsmaster -t >/dev/null 2>&1' > /usr/local/bin/healthcheck.sh \
    && chmod +x /usr/local/bin/healthcheck.sh

# Switch to mfs user
USER mfs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Use tini as init system
ENTRYPOINT ["/usr/bin/tini", "--"]

# Start master server
CMD ["mfsmaster", "-f"]

# Metadata labels for image management
LABEL org.opencontainers.image.title="MooseFS Master Server" \
      org.opencontainers.image.description="Optimized MooseFS Master Server" \
      org.opencontainers.image.vendor="MooseFS" \
      org.opencontainers.image.version="${BUILDNO}" \
      org.opencontainers.image.source="https://github.com/moosefs/moosefs"